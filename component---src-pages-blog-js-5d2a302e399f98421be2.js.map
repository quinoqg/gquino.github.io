{"version":3,"sources":["webpack://gquino.com/./src/components/PostListing.js","webpack://gquino.com/./src/components/SEO.js","webpack://gquino.com/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://gquino.com/./src/pages/blog.js","webpack://gquino.com/./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack://gquino.com/./node_modules/gatsby/node_modules/regenerator-runtime/runtime.js"],"names":["PostListing","getPostList","this","props","postEdges","filter","postEdge","node","frontmatter","template","map","path","fields","slug","tags","thumbnail","title","date","excerpt","timeToRead","categories","render","simple","postList","className","post","childImageSharp","fixed","popular","includes","formatDate","newest","moment","subtract","Link","to","key","Component","SEO","description","postURL","postNode","postPath","postSEO","image","postMeta","src","urljoin","config","blogURL","schemaOrgJSONLD","url","name","alternateName","push","itemListElement","position","item","headline","content","type","JSON","stringify","property","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","BlogPage","state","searchTerm","currentCategories","posts","data","edges","filteredPosts","handleChange","event","target","setState","filterPosts","toLowerCase","length","every","cat","updateCategories","category","prevState","filterCount","group","Helmet","active","fieldValue","onClick","totalCount","placeholder","onChange","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"oNAMqBA,E,sGACnBC,YAAA,WAgBE,OAfsBC,KAAKC,MAAnBC,UAELC,QAAO,SAAAC,GAAQ,MAA2C,SAAvCA,EAASC,KAAKC,YAAYC,YAC7CC,KAAI,SAAAJ,GACH,MAAO,CACLK,KAAML,EAASC,KAAKK,OAAOC,KAC3BC,KAAMR,EAASC,KAAKC,YAAYM,KAChCC,UAAWT,EAASC,KAAKC,YAAYO,UACrCC,MAAOV,EAASC,KAAKC,YAAYQ,MACjCC,KAAMX,EAASC,KAAKK,OAAOK,KAC3BC,QAASZ,EAASC,KAAKW,QACvBC,WAAYb,EAASC,KAAKY,WAC1BC,WAAYd,EAASC,KAAKC,YAAYY,gB,EAM9CC,OAAA,WAAU,IACAC,EAAWpB,KAAKC,MAAhBmB,OACFC,EAAWrB,KAAKD,cAEtB,OACE,2BAASuB,UAAS,UAAWF,EAAS,SAAW,KAC9CC,EAASb,KAAI,SAAAe,GACZ,IAAIV,EACAU,EAAKV,YACPA,EAAYU,EAAKV,UAAUW,gBAAgBC,OAG7C,IAAMC,EAAUH,EAAKL,WAAWS,SAAS,WACnCZ,GAAOa,OAAWL,EAAKR,MACvBc,EAASC,IAAOP,EAAKR,MAAQe,MAASC,SAAS,EAAG,UAExD,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKd,KAAMyB,IAAKX,EAAKT,OAC7B,uBAAKQ,UAAU,QACZT,EAAY,gBAAC,IAAD,CAAKY,MAAOZ,IAAgB,4BACzC,2BACE,0BAAKU,EAAKT,OACRM,EAAiD,KAAxC,uBAAKE,UAAU,WAAWP,IAEtCc,GACC,uBAAKP,UAAU,OACb,oCAGHI,IAAYN,GACX,uBAAKE,UAAU,WACb,8C,GAnDqBa,c,0ICDpBC,E,6FACnBjB,OAAA,WAAU,IAEJL,EACAuB,EAEAC,EALG,EACiCtC,KAAKC,MAArCsC,EADD,EACCA,SAAUC,EADX,EACWA,SAAUC,EADrB,EACqBA,QAGxBC,EAAQ,GAGZ,GAAID,EAAS,CACX,IAAME,EAAWJ,EAASjC,YAC1BQ,EAAQ6B,EAAS7B,MACjBuB,EAAcM,EAASN,YAAcM,EAASN,YAAcE,EAASvB,QACjE2B,EAAS9B,YACX6B,EAAQC,EAAS9B,UAAUW,gBAAgBC,MAAMmB,KAEnDN,EAAUO,IAAQC,YAAgBA,eAAmBN,QAErD1B,EAAQgC,cACRT,EAAcS,oBACdJ,EAAQI,aAGVJ,EAAQG,IAAQC,YAAgBJ,GAChC,IAAMK,EAAUF,IAAQC,YAAgBA,gBAClCE,EAAkB,CACtB,CACE,WAAY,oBACZ,QAAS,UACTC,IAAKF,EACLG,KAAMpC,EACNqC,cAAeL,iBAAsBA,iBAAsB,KAoC/D,OAhCIL,GACFO,EAAgBI,KACd,CACE,WAAY,oBACZ,QAAS,iBACTC,gBAAiB,CACf,CACE,QAAS,WACTC,SAAU,EACVC,KAAM,CACJ,MAAOjB,EACPY,KAAMpC,EACN4B,YAKR,CACE,WAAY,oBACZ,QAAS,cACTO,IAAKF,EACLG,KAAMpC,EACNqC,cAAeL,iBAAsBA,iBAAsB,GAC3DU,SAAU1C,EACV4B,MAAO,CACL,QAAS,cACTO,IAAKP,GAEPL,gBAKJ,gBAAC,IAAD,KACE,wBAAMa,KAAK,cAAcO,QAASpB,IAClC,wBAAMa,KAAK,QAAQO,QAASf,IAE5B,0BAAQgB,KAAK,uBAAuBC,KAAKC,UAAUZ,IAEnD,wBAAMa,SAAS,SAASJ,QAAShB,EAAUH,EAAUS,IACpDN,EAAU,wBAAMoB,SAAS,UAAUJ,QAAQ,YAAe,KAC3D,wBAAMI,SAAS,WAAWJ,QAAS3C,IACnC,wBAAM+C,SAAS,iBAAiBJ,QAASpB,IACzC,wBAAMwB,SAAS,WAAWJ,QAASf,IAEnC,wBAAMQ,KAAK,eAAeO,QAAQ,wBAClC,wBAAMP,KAAK,kBAAkBO,QAASX,kBACtC,wBAAMI,KAAK,gBAAgBO,QAAS3C,IACpC,wBAAMoC,KAAK,sBAAsBO,QAASpB,IAC1C,wBAAMa,KAAK,gBAAgBO,QAASf,M,GAnFXP,c,6FCLjC,SAAS2B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQjC,EAAKkC,GACpE,IACE,IAAIC,EAAON,EAAI7B,GAAKkC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAN,EAAOM,GAILF,EAAKG,KACPR,EAAQM,GAERG,QAAQT,QAAQM,GAAOI,KAAKR,EAAOC,GAIxB,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAO7E,KACP8E,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGI,MAAMH,EAAMC,GAEzB,SAASZ,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,GAGlE,SAASH,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,O,sGCtBSC,E,oJACnBC,MAAQ,CACNC,WAAY,GACZC,kBAAmB,GACnBC,MAAO,EAAKtF,MAAMuF,KAAKD,MAAME,MAC7BC,cAAe,EAAKzF,MAAMuF,KAAKD,MAAME,O,EAGvCE,a,6BAAe,WAAMC,GAAN,sFACWA,EAAMC,OAAtB3C,EADK,EACLA,KAAMoB,EADD,EACCA,MADD,SAGP,EAAKwB,WAAL,MAAiB5C,GAAOoB,EAAxB,IAHO,OAKb,EAAKyB,cALQ,2C,wDAQfA,YAAc,WAAO,IAAD,EAC+B,EAAKX,MAA9CG,EADU,EACVA,MAAOF,EADG,EACHA,WAAYC,EADT,EACSA,kBAEvBI,EAAgBH,EAAMpF,QAAO,SAAAoB,GAC/B,GAAIA,EAAKlB,KAAKC,YAAYQ,MAAMkF,cAAcrE,SAAS0D,EAAWW,eAChE,OAAO,KAIPV,EAAkBW,OAAS,IAC7BP,EAAgBA,EAAcvF,QAAO,SAAAoB,GACnC,GACEA,EAAKlB,KAAKC,YAAYY,YACtBoE,EAAkBY,OAAM,SAAAC,GAAG,OAAI5E,EAAKlB,KAAKC,YAAYY,WAAWS,SAASwE,MAEzE,OAAO,MAKb,EAAKL,SAAS,CAAEJ,mB,EAGlBU,iBAAmB,SAAAC,GACa,EAAKjB,MAA3BE,kBAEe3D,SAAS0E,GAK9B,EAAKP,UAAS,SAAAQ,GAAS,MAAK,CAC1BhB,kBAAmBgB,EAAUhB,kBAAkBnF,QAAO,SAAAgG,GAAG,OAAIE,IAAaF,SAL5E,EAAKL,UAAS,SAAAQ,GAAS,MAAK,CAC1BhB,kBAAkB,GAAD,eAAMgB,EAAUhB,mBAAhB,CAAmCe,S,iCAS1DlF,OAAA,WAAU,IAAD,SACkDnB,KAAKoF,MAAtDM,EADD,EACCA,cAAeL,EADhB,EACgBA,WAAYC,EAD5B,EAC4BA,kBAC7BiB,EAAcb,EAAcO,OAC5B/E,EAAalB,KAAKC,MAAMuF,KAAKtE,WAAWsF,MAE9C,OACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,CAAQ3F,MAAK,cAAgBgC,gBAC7B,gBAACV,EAAA,EAAD,MACA,uBAAKd,UAAU,aACb,sCACA,uBAAKA,UAAU,sBACZJ,EAAWV,KAAI,SAAA6F,GACd,IAAMK,EAASpB,EAAkB3D,SAAS0E,EAASM,YAEnD,OACE,uBACErF,UAAS,oBAAqBoF,EAAS,SAAW,IAClDxE,IAAKmE,EAASM,WACdC,QAAO,YAAE,8FACD,EAAKR,iBAAiBC,EAASM,YAD9B,uBAED,EAAKZ,cAFJ,4CAKRM,EAASM,WARZ,IAQwB,0BAAQrF,UAAU,SAAS+E,EAASQ,iBAKlE,uBAAKvF,UAAU,oBACb,yBACEA,UAAU,SACVoC,KAAK,OACLR,KAAK,aACLoB,MAAOe,EACPyB,YAAY,+BACZC,SAAU/G,KAAK2F,eAEjB,uBAAKrE,UAAU,gBAAgBiF,IAEjC,gBAACzG,EAAA,EAAD,CAAaI,UAAWwF,O,GA7FIvD,c,qBCTtC6E,EAAOC,QAAU,EAAjB,O,iBCOA,IAAIC,EAAW,SAAUD,GACvB,aAEA,IAEI/B,EAFAiC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAK/F,EAAKoC,GAOxB,OANA8C,OAAOc,eAAeD,EAAK/F,EAAK,CAC9BoC,MAAOA,EACP6D,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAI/F,GAEb,IAEE8F,EAAO,GAAI,IACX,MAAO/C,GACP+C,EAAS,SAASC,EAAK/F,EAAKoC,GAC1B,OAAO2D,EAAI/F,GAAOoC,GAItB,SAASgE,EAAKC,EAASC,EAAS3D,EAAM4D,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAsMZ,SAA0BT,EAAS1D,EAAMiE,GACvC,IAAI1D,EAAQ6D,EAEZ,OAAO,SAAgBC,EAAQ9E,GAC7B,GAAIgB,IAAU+D,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIhE,IAAUiE,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAM9E,EAKR,OAAOkF,IAMT,IAHAR,EAAQI,OAASA,EACjBJ,EAAQ1E,IAAMA,IAED,CACX,IAAImF,EAAWT,EAAQS,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUT,GACnD,GAAIU,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQ1E,SAElC,GAAuB,UAAnB0E,EAAQI,OAAoB,CACrC,GAAI9D,IAAU6D,EAEZ,MADA7D,EAAQiE,EACFP,EAAQ1E,IAGhB0E,EAAQe,kBAAkBf,EAAQ1E,SAEN,WAAnB0E,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQ1E,KAGnCgB,EAAQ+D,EAER,IAAIY,EAASC,EAASzB,EAAS1D,EAAMiE,GACrC,GAAoB,WAAhBiB,EAAOrG,KAAmB,CAO5B,GAJA0B,EAAQ0D,EAAQtE,KACZ6E,EACAY,EAEAF,EAAO3F,MAAQsF,EACjB,SAGF,MAAO,CACLpF,MAAOyF,EAAO3F,IACdI,KAAMsE,EAAQtE,MAGS,UAAhBuF,EAAOrG,OAChB0B,EAAQiE,EAGRP,EAAQI,OAAS,QACjBJ,EAAQ1E,IAAM2F,EAAO3F,OA9QP8F,CAAiB3B,EAAS1D,EAAMiE,GAE7CF,EAcT,SAASoB,EAASpF,EAAIqD,EAAK7D,GACzB,IACE,MAAO,CAAEV,KAAM,SAAUU,IAAKQ,EAAGuF,KAAKlC,EAAK7D,IAC3C,MAAOa,GACP,MAAO,CAAEvB,KAAM,QAASU,IAAKa,IAhBjCgC,EAAQqB,KAAOA,EAoBf,IAAIW,EAAyB,iBACzBgB,EAAyB,iBACzBd,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAASf,KACT,SAASyB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB5C,GAAkB,WAClC,OAAO1H,MAGT,IAAIuK,EAAWnD,OAAOoD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BtD,GAC5BG,EAAO6C,KAAKM,EAAyB/C,KAGvC4C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BhD,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAOyB,GAWtC,SAASM,EAAsBvD,GAC7B,CAAC,OAAQ,QAAS,UAAUwD,SAAQ,SAAS3B,GAC3ClB,EAAOX,EAAW6B,GAAQ,SAAS9E,GACjC,OAAOpE,KAAKgJ,QAAQE,EAAQ9E,SAkClC,SAAS0G,EAAclC,EAAWmC,GAChC,SAASC,EAAO9B,EAAQ9E,EAAKJ,EAASC,GACpC,IAAI8F,EAASC,EAASpB,EAAUM,GAASN,EAAWxE,GACpD,GAAoB,UAAhB2F,EAAOrG,KAEJ,CACL,IAAIuH,EAASlB,EAAO3F,IAChBE,EAAQ2G,EAAO3G,MACnB,OAAIA,GACiB,iBAAVA,GACPgD,EAAO6C,KAAK7F,EAAO,WACdyG,EAAY/G,QAAQM,EAAM4G,SAASxG,MAAK,SAASJ,GACtD0G,EAAO,OAAQ1G,EAAON,EAASC,MAC9B,SAASgB,GACV+F,EAAO,QAAS/F,EAAKjB,EAASC,MAI3B8G,EAAY/G,QAAQM,GAAOI,MAAK,SAASyG,GAI9CF,EAAO3G,MAAQ6G,EACfnH,EAAQiH,MACP,SAAS1G,GAGV,OAAOyG,EAAO,QAASzG,EAAOP,EAASC,MAvBzCA,EAAO8F,EAAO3F,KA4BlB,IAAIgH,EAgCJpL,KAAKgJ,QA9BL,SAAiBE,EAAQ9E,GACvB,SAASiH,IACP,OAAO,IAAIN,GAAY,SAAS/G,EAASC,GACvC+G,EAAO9B,EAAQ9E,EAAKJ,EAASC,MAIjC,OAAOmH,EAaLA,EAAkBA,EAAgB1G,KAChC2G,EAGAA,GACEA,KAkHV,SAAS5B,EAAoBF,EAAUT,GACrC,IAAII,EAASK,EAAS5B,SAASmB,EAAQI,QACvC,GAAIA,IAAWhE,EAAW,CAKxB,GAFA4D,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,CAE9B,GAAIK,EAAS5B,SAAiB,SAG5BmB,EAAQI,OAAS,SACjBJ,EAAQ1E,IAAMc,EACduE,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,QAGV,OAAOQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQ1E,IAAM,IAAIkH,UAChB,kDAGJ,OAAO5B,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS5B,SAAUmB,EAAQ1E,KAEzD,GAAoB,UAAhB2F,EAAOrG,KAIT,OAHAoF,EAAQI,OAAS,QACjBJ,EAAQ1E,IAAM2F,EAAO3F,IACrB0E,EAAQS,SAAW,KACZG,EAGT,IAAIrF,EAAO0F,EAAO3F,IAElB,OAAMC,EAOFA,EAAKG,MAGPsE,EAAQS,EAASgC,YAAclH,EAAKC,MAGpCwE,EAAQ0C,KAAOjC,EAASkC,QAQD,WAAnB3C,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQ1E,IAAMc,GAUlB4D,EAAQS,SAAW,KACZG,GANErF,GA3BPyE,EAAQI,OAAS,QACjBJ,EAAQ1E,IAAM,IAAIkH,UAAU,oCAC5BxC,EAAQS,SAAW,KACZG,GAoDX,SAASgC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB3L,KAAKiM,WAAW7I,KAAKwI,GAGvB,SAASM,EAAcN,GACrB,IAAI7B,EAAS6B,EAAMO,YAAc,GACjCpC,EAAOrG,KAAO,gBACPqG,EAAO3F,IACdwH,EAAMO,WAAapC,EAGrB,SAAShB,EAAQN,GAIfzI,KAAKiM,WAAa,CAAC,CAAEJ,OAAQ,SAC7BpD,EAAYoC,QAAQa,EAAc1L,MAClCA,KAAKoM,OAAM,GA8Bb,SAAS1B,EAAO2B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS3E,GAC9B,GAAI4E,EACF,OAAOA,EAAenC,KAAKkC,GAG7B,GAA6B,mBAAlBA,EAASb,KAClB,OAAOa,EAGT,IAAKE,MAAMF,EAASpG,QAAS,CAC3B,IAAIuG,GAAK,EAAGhB,EAAO,SAASA,IAC1B,OAASgB,EAAIH,EAASpG,QACpB,GAAIqB,EAAO6C,KAAKkC,EAAUG,GAGxB,OAFAhB,EAAKlH,MAAQ+H,EAASG,GACtBhB,EAAKhH,MAAO,EACLgH,EAOX,OAHAA,EAAKlH,MAAQY,EACbsG,EAAKhH,MAAO,EAELgH,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMlC,GAIjB,SAASA,IACP,MAAO,CAAEhF,MAAOY,EAAWV,MAAM,GA+MnC,OA5mBA4F,EAAkB/C,UAAYsD,EAAG8B,YAAcpC,EAC/CA,EAA2BoC,YAAcrC,EACzCA,EAAkBsC,YAAc1E,EAC9BqC,EACAvC,EACA,qBAaFb,EAAQ0F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASzC,GAG2B,uBAAnCyC,EAAKH,aAAeG,EAAK3J,QAIhC+D,EAAQ6F,KAAO,SAASF,GAQtB,OAPIxF,OAAO2F,eACT3F,OAAO2F,eAAeH,EAAQvC,IAE9BuC,EAAOI,UAAY3C,EACnBrC,EAAO4E,EAAQ9E,EAAmB,sBAEpC8E,EAAOvF,UAAYD,OAAOyB,OAAO8B,GAC1BiC,GAOT3F,EAAQgG,MAAQ,SAAS7I,GACvB,MAAO,CAAE8G,QAAS9G,IAsEpBwG,EAAsBE,EAAczD,WACpCyD,EAAczD,UAAUO,GAAuB,WAC7C,OAAO5H,MAETiH,EAAQ6D,cAAgBA,EAKxB7D,EAAQiG,MAAQ,SAAS3E,EAASC,EAAS3D,EAAM4D,EAAasC,QACxC,IAAhBA,IAAwBA,EAActG,SAE1C,IAAI0I,EAAO,IAAIrC,EACbxC,EAAKC,EAASC,EAAS3D,EAAM4D,GAC7BsC,GAGF,OAAO9D,EAAQ0F,oBAAoBnE,GAC/B2E,EACAA,EAAK3B,OAAO9G,MAAK,SAASuG,GACxB,OAAOA,EAAOzG,KAAOyG,EAAO3G,MAAQ6I,EAAK3B,WAuKjDZ,EAAsBD,GAEtB3C,EAAO2C,EAAI7C,EAAmB,aAO9B6C,EAAGjD,GAAkB,WACnB,OAAO1H,MAGT2K,EAAGyC,SAAW,WACZ,MAAO,sBAkCTnG,EAAQoG,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAInL,KAAOoL,EACdD,EAAKjK,KAAKlB,GAMZ,OAJAmL,EAAKE,UAIE,SAAS/B,IACd,KAAO6B,EAAKpH,QAAQ,CAClB,IAAI/D,EAAMmL,EAAKG,MACf,GAAItL,KAAOoL,EAGT,OAFA9B,EAAKlH,MAAQpC,EACbsJ,EAAKhH,MAAO,EACLgH,EAQX,OADAA,EAAKhH,MAAO,EACLgH,IAsCXvE,EAAQyD,OAASA,EAMjB3B,EAAQ1B,UAAY,CAClBoF,YAAa1D,EAEbqD,MAAO,SAASqB,GAcd,GAbAzN,KAAK0N,KAAO,EACZ1N,KAAKwL,KAAO,EAGZxL,KAAK2J,KAAO3J,KAAK4J,MAAQ1E,EACzBlF,KAAKwE,MAAO,EACZxE,KAAKuJ,SAAW,KAEhBvJ,KAAKkJ,OAAS,OACdlJ,KAAKoE,IAAMc,EAEXlF,KAAKiM,WAAWpB,QAAQqB,IAEnBuB,EACH,IAAK,IAAIvK,KAAQlD,KAEQ,MAAnBkD,EAAKyK,OAAO,IACZrG,EAAO6C,KAAKnK,KAAMkD,KACjBqJ,OAAOrJ,EAAK0K,MAAM,MACrB5N,KAAKkD,GAAQgC,IAMrB2I,KAAM,WACJ7N,KAAKwE,MAAO,EAEZ,IACIsJ,EADY9N,KAAKiM,WAAW,GACLE,WAC3B,GAAwB,UAApB2B,EAAWpK,KACb,MAAMoK,EAAW1J,IAGnB,OAAOpE,KAAK+N,MAGdlE,kBAAmB,SAASmE,GAC1B,GAAIhO,KAAKwE,KACP,MAAMwJ,EAGR,IAAIlF,EAAU9I,KACd,SAASiO,EAAOC,EAAKC,GAYnB,OAXApE,EAAOrG,KAAO,QACdqG,EAAO3F,IAAM4J,EACblF,EAAQ0C,KAAO0C,EAEXC,IAGFrF,EAAQI,OAAS,OACjBJ,EAAQ1E,IAAMc,KAGNiJ,EAGZ,IAAK,IAAI3B,EAAIxM,KAAKiM,WAAWhG,OAAS,EAAGuG,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQ5L,KAAKiM,WAAWO,GACxBzC,EAAS6B,EAAMO,WAEnB,GAAqB,SAAjBP,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAU7L,KAAK0N,KAAM,CAC7B,IAAIU,EAAW9G,EAAO6C,KAAKyB,EAAO,YAC9ByC,EAAa/G,EAAO6C,KAAKyB,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAIrO,KAAK0N,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAI9L,KAAK0N,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIpO,KAAK0N,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,KAAIuC,EAMT,MAAM,IAAIjF,MAAM,0CALhB,GAAIpJ,KAAK0N,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9BjC,OAAQ,SAASpG,EAAMU,GACrB,IAAK,IAAIoI,EAAIxM,KAAKiM,WAAWhG,OAAS,EAAGuG,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQ5L,KAAKiM,WAAWO,GAC5B,GAAIZ,EAAMC,QAAU7L,KAAK0N,MACrBpG,EAAO6C,KAAKyB,EAAO,eACnB5L,KAAK0N,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAAT5K,GACS,aAATA,IACD4K,EAAazC,QAAUzH,GACvBA,GAAOkK,EAAavC,aAGtBuC,EAAe,MAGjB,IAAIvE,EAASuE,EAAeA,EAAanC,WAAa,GAItD,OAHApC,EAAOrG,KAAOA,EACdqG,EAAO3F,IAAMA,EAETkK,GACFtO,KAAKkJ,OAAS,OACdlJ,KAAKwL,KAAO8C,EAAavC,WAClBrC,GAGF1J,KAAKuO,SAASxE,IAGvBwE,SAAU,SAASxE,EAAQiC,GACzB,GAAoB,UAAhBjC,EAAOrG,KACT,MAAMqG,EAAO3F,IAcf,MAXoB,UAAhB2F,EAAOrG,MACS,aAAhBqG,EAAOrG,KACT1D,KAAKwL,KAAOzB,EAAO3F,IACM,WAAhB2F,EAAOrG,MAChB1D,KAAK+N,KAAO/N,KAAKoE,IAAM2F,EAAO3F,IAC9BpE,KAAKkJ,OAAS,SACdlJ,KAAKwL,KAAO,OACa,WAAhBzB,EAAOrG,MAAqBsI,IACrChM,KAAKwL,KAAOQ,GAGPtC,GAGT8E,OAAQ,SAASzC,GACf,IAAK,IAAIS,EAAIxM,KAAKiM,WAAWhG,OAAS,EAAGuG,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQ5L,KAAKiM,WAAWO,GAC5B,GAAIZ,EAAMG,aAAeA,EAGvB,OAFA/L,KAAKuO,SAAS3C,EAAMO,WAAYP,EAAMI,UACtCE,EAAcN,GACPlC,IAKb,MAAS,SAASmC,GAChB,IAAK,IAAIW,EAAIxM,KAAKiM,WAAWhG,OAAS,EAAGuG,GAAK,IAAKA,EAAG,CACpD,IAAIZ,EAAQ5L,KAAKiM,WAAWO,GAC5B,GAAIZ,EAAMC,SAAWA,EAAQ,CAC3B,IAAI9B,EAAS6B,EAAMO,WACnB,GAAoB,UAAhBpC,EAAOrG,KAAkB,CAC3B,IAAI+K,EAAS1E,EAAO3F,IACpB8H,EAAcN,GAEhB,OAAO6C,GAMX,MAAM,IAAIrF,MAAM,0BAGlBsF,cAAe,SAASrC,EAAUd,EAAYE,GAa5C,OAZAzL,KAAKuJ,SAAW,CACd5B,SAAU+C,EAAO2B,GACjBd,WAAYA,EACZE,QAASA,GAGS,SAAhBzL,KAAKkJ,SAGPlJ,KAAKoE,IAAMc,GAGNwE,IAQJzC,EA7sBK,CAotBiBD,EAAOC,SAGtC,IACE0H,mBAAqBzH,EACrB,MAAO0H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC3H","file":"component---src-pages-blog-js-5d2a302e399f98421be2.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { formatDate } from '../utils/global'\nimport moment from 'moment'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .filter(postEdge => postEdge.node.frontmatter.template === 'post')\n      .map(postEdge => {\n        return {\n          path: postEdge.node.fields.slug,\n          tags: postEdge.node.frontmatter.tags,\n          thumbnail: postEdge.node.frontmatter.thumbnail,\n          title: postEdge.node.frontmatter.title,\n          date: postEdge.node.fields.date,\n          excerpt: postEdge.node.excerpt,\n          timeToRead: postEdge.node.timeToRead,\n          categories: postEdge.node.frontmatter.categories,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n          let thumbnail\n          if (post.thumbnail) {\n            thumbnail = post.thumbnail.childImageSharp.fixed\n          }\n\n          const popular = post.categories.includes('Popular')\n          const date = formatDate(post.date)\n          const newest = moment(post.date) > moment().subtract(1, 'months')\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                {thumbnail ? <Img fixed={thumbnail} /> : <div />}\n                <div>\n                  <h2>{post.title}</h2>\n                  {!simple ? <div className=\"excerpt\">{date}</div> : null}\n                </div>\n                {newest && (\n                  <div className=\"new\">\n                    <div>New!</div>\n                  </div>\n                )}\n                {popular && !simple && (\n                  <div className=\"popular\">\n                    <div>Popular</div>\n                  </div>\n                )}\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../data/SiteConfig'\n\nexport default class SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image = ''\n    let postURL\n\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      title = postMeta.title\n      description = postMeta.description ? postMeta.description : postNode.excerpt\n      if (postMeta.thumbnail) {\n        image = postMeta.thumbnail.childImageSharp.fixed.src\n      }\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n\n    image = urljoin(config.siteUrl, image)\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n      },\n    ]\n\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image,\n          },\n          description,\n        }\n      )\n    }\n    return (\n      <Helmet>\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:creator\" content={config.userTwitter} />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\nimport _ from 'lodash'\n\nexport default class BlogPage extends Component {\n  state = {\n    searchTerm: '',\n    currentCategories: [],\n    posts: this.props.data.posts.edges,\n    filteredPosts: this.props.data.posts.edges,\n  }\n\n  handleChange = async event => {\n    const { name, value } = event.target\n\n    await this.setState({ [name]: value })\n\n    this.filterPosts()\n  }\n\n  filterPosts = () => {\n    const { posts, searchTerm, currentCategories } = this.state\n\n    let filteredPosts = posts.filter(post => {\n      if (post.node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return true\n      }\n    })\n\n    if (currentCategories.length > 0) {\n      filteredPosts = filteredPosts.filter(post => {\n        if (\n          post.node.frontmatter.categories &&\n          currentCategories.every(cat => post.node.frontmatter.categories.includes(cat))\n        ) {\n          return true\n        }\n      })\n    }\n\n    this.setState({ filteredPosts })\n  }\n\n  updateCategories = category => {\n    const { currentCategories } = this.state\n\n    if (!currentCategories.includes(category)) {\n      this.setState(prevState => ({\n        currentCategories: [...prevState.currentCategories, category],\n      }))\n    } else {\n      this.setState(prevState => ({\n        currentCategories: prevState.currentCategories.filter(cat => category !== cat),\n      }))\n    }\n  }\n\n  render() {\n    const { filteredPosts, searchTerm, currentCategories } = this.state\n    const filterCount = filteredPosts.length\n    const categories = this.props.data.categories.group\n\n    return (\n      <Layout>\n        <Helmet title={`Articles – ${config.siteTitle}`} />\n        <SEO />\n        <div className=\"container\">\n          <h1>Articles</h1>\n          <div className=\"category-container\">\n            {categories.map(category => {\n              const active = currentCategories.includes(category.fieldValue)\n\n              return (\n                <div\n                  className={`category-filter ${active ? 'active' : ''}`}\n                  key={category.fieldValue}\n                  onClick={async () => {\n                    await this.updateCategories(category.fieldValue)\n                    await this.filterPosts()\n                  }}\n                >\n                  {category.fieldValue} <strong className=\"count\">{category.totalCount}</strong>\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"search-container\">\n            <input\n              className=\"search\"\n              type=\"text\"\n              name=\"searchTerm\"\n              value={searchTerm}\n              placeholder=\"Type here to filter posts...\"\n              onChange={this.handleChange}\n            />\n            <div className=\"filter-count\">{filterCount}</div>\n          </div>\n          <PostListing postEdges={filteredPosts} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    posts: allMarkdownRemark(limit: 2000, sort: { fields: [fields___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt(pruneLength: 180)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date\n            template\n          }\n        }\n      }\n    }\n    categories: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___categories) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}