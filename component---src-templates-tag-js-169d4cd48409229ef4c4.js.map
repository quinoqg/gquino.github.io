{"version":3,"sources":["webpack://gquino.com/./src/components/PostListing.js","webpack://gquino.com/./src/templates/tag.js"],"names":["PostListing","getPostList","this","props","postEdges","filter","postEdge","node","frontmatter","template","map","path","fields","slug","tags","thumbnail","title","date","excerpt","timeToRead","categories","render","simple","postList","className","post","childImageSharp","fixed","popular","includes","formatDate","newest","moment","subtract","Link","to","key","Component","TagTemplate","tag","pageContext","data","allMarkdownRemark","edges","config"],"mappings":"sNAMqBA,E,sGACnBC,YAAA,WAgBE,OAfsBC,KAAKC,MAAnBC,UAELC,QAAO,SAAAC,GAAQ,MAA2C,SAAvCA,EAASC,KAAKC,YAAYC,YAC7CC,KAAI,SAAAJ,GACH,MAAO,CACLK,KAAML,EAASC,KAAKK,OAAOC,KAC3BC,KAAMR,EAASC,KAAKC,YAAYM,KAChCC,UAAWT,EAASC,KAAKC,YAAYO,UACrCC,MAAOV,EAASC,KAAKC,YAAYQ,MACjCC,KAAMX,EAASC,KAAKK,OAAOK,KAC3BC,QAASZ,EAASC,KAAKW,QACvBC,WAAYb,EAASC,KAAKY,WAC1BC,WAAYd,EAASC,KAAKC,YAAYY,gB,EAM9CC,OAAA,WAAU,IACAC,EAAWpB,KAAKC,MAAhBmB,OACFC,EAAWrB,KAAKD,cAEtB,OACE,2BAASuB,UAAS,UAAWF,EAAS,SAAW,KAC9CC,EAASb,KAAI,SAAAe,GACZ,IAAIV,EACAU,EAAKV,YACPA,EAAYU,EAAKV,UAAUW,gBAAgBC,OAG7C,IAAMC,EAAUH,EAAKL,WAAWS,SAAS,WACnCZ,GAAOa,OAAWL,EAAKR,MACvBc,EAASC,IAAOP,EAAKR,MAAQe,MAASC,SAAS,EAAG,UAExD,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAKd,KAAMyB,IAAKX,EAAKT,OAC7B,uBAAKQ,UAAU,QACZT,EAAY,gBAAC,IAAD,CAAKY,MAAOZ,IAAgB,4BACzC,2BACE,0BAAKU,EAAKT,OACRM,EAAiD,KAAxC,uBAAKE,UAAU,WAAWP,IAEtCc,GACC,uBAAKP,UAAU,OACb,oCAGHI,IAAYN,GACX,uBAAKE,UAAU,WACb,8C,GAnDqBa,c,wJCCpBC,E,6FACnBjB,OAAA,WAAU,IACAkB,EAAQrC,KAAKC,MAAMqC,YAAnBD,IACFnC,EAAYF,KAAKC,MAAMsC,KAAKC,kBAAkBC,MAEpD,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQ3B,MAAK,oBAAsBuB,EAAtB,OAAgCK,gBAC7C,uBAAKpB,UAAU,aACb,6CACkB,yBAAIe,IAEtB,gBAAC,IAAD,CAAanC,UAAWA,O,GAZOiC","file":"component---src-templates-tag-js-169d4cd48409229ef4c4.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { formatDate } from '../utils/global'\nimport moment from 'moment'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges\n      .filter(postEdge => postEdge.node.frontmatter.template === 'post')\n      .map(postEdge => {\n        return {\n          path: postEdge.node.fields.slug,\n          tags: postEdge.node.frontmatter.tags,\n          thumbnail: postEdge.node.frontmatter.thumbnail,\n          title: postEdge.node.frontmatter.title,\n          date: postEdge.node.fields.date,\n          excerpt: postEdge.node.excerpt,\n          timeToRead: postEdge.node.timeToRead,\n          categories: postEdge.node.frontmatter.categories,\n        }\n      })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n          let thumbnail\n          if (post.thumbnail) {\n            thumbnail = post.thumbnail.childImageSharp.fixed\n          }\n\n          const popular = post.categories.includes('Popular')\n          const date = formatDate(post.date)\n          const newest = moment(post.date) > moment().subtract(1, 'months')\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                {thumbnail ? <Img fixed={thumbnail} /> : <div />}\n                <div>\n                  <h2>{post.title}</h2>\n                  {!simple ? <div className=\"excerpt\">{date}</div> : null}\n                </div>\n                {newest && (\n                  <div className=\"new\">\n                    <div>New!</div>\n                  </div>\n                )}\n                {popular && !simple && (\n                  <div className=\"popular\">\n                    <div>Popular</div>\n                  </div>\n                )}\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class TagTemplate extends Component {\n  render() {\n    const { tag } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <Helmet title={`Posts tagged as \"${tag}\" â€“ ${config.siteTitle}`} />\n        <div className=\"container\">\n          <h1>\n            Posts tagged as <u>{tag}</u>\n          </h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date\n            template\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}